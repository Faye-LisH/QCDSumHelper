(* ::Package:: *)

(* ::Code::Initialization::Plain:: *)
(* Wolfram Language package *)

(* Author: ShungHong Li *)


(* ::Code::Initialization::Plain:: *)
Fourquarkd8type3::usage="Fourquarkd8type3[q_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{v3_,v4_,{a2_,b2_,c2_,d2_}}] give the \[LeftAngleBracket]\!\(\*OverscriptBox[\(q\), \(_\)]\)Gq\[RightAngleBracket]\[LeftAngleBracket]\!\(\*OverscriptBox[\(q\), \(_\)]\)q\[RightAngleBracket] contribution of OPE result about <J1 J2>, with J1=\!\(\*SubscriptBox[OverscriptBox[\(\[CapitalPsi]\), \(_\)], \(a1\)]\)\!\(\*SubscriptBox[\(v1\[CapitalPsi]\), \(b1\)]\)\!\(\*SubscriptBox[OverscriptBox[\(\[CapitalPsi]\), \(_\)], \(c1\)]\)\!\(\*SubscriptBox[\(v2\[CapitalPsi]\), \(d1\)]\) and J2=\!\(\*SubscriptBox[OverscriptBox[\(\[CapitalPsi]\), \(_\)], \(b2\)]\)\!\(\*SubscriptBox[\(v3\[CapitalPsi]\), \(a2\)]\)\!\(\*SubscriptBox[OverscriptBox[\(\[CapitalPsi]\), \(_\)], \(d2\)]\)\!\(\*SubscriptBox[\(v4\[CapitalPsi]\), \(c2\)]\), here the background gluon comes from quark propatator. "

Fourquarkd8type3::inderr="Dummy indices conflict!"

Fourquarkd8type3::curerr="Unknow current structure!"



(* ::Code::Initialization::Plain:: *)
Begin["`Private`Fourquarkd8type3`"]


(* ::Code::Initialization::Plain:: *)
Options[Fourquarkd8type3] = {
	Parallelized->True,
	HoldFlavor->False,
	AutoNDR->True
}



(* VS-first *)


(* ::Code::Initialization::Plain:: *)
(*------------------------------------------------------------------*)
(* propagators *)
prop[q_]= I GSD[q]FAD[q];

(* xprop[x_]=FourierPX[prop[q],{q,x}]; *)
xprop[x_]= 1/2 I^(1-D) \[Pi]^(-D/2) DiracGamma[Momentum[x,D],D] Pair[Momentum[x,D],Momentum[x,D]]^(-D/2) qGamma[D/2];



(* ::Code::Initialization::Plain:: *)
(*--- Condensate ---*)


(* ::Code::Initialization::Plain:: *)
cqq[f2_,f1_]=-1/(4CA)Condensate[{f2,f1}];
cqgq[x_,f2_,f1_]=-SPD[x]/(2^4 D CA)Condensate[{f2,"G",f1}];
(*-------------------------------------------------*)


Fourquarkd8type3[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{v3_,v4_,{a2_,b2_,c2_,d2_}},OptionsPattern[]]:=Block[{null,tmp,tmp1,tmp2,hv3,hv4,holdf=OptionValue[HoldFlavor],atr,diagrams,fdir,files,pall,dot},


(*--- check dummy indices in input ---*)
If[DummyCheck[v1,v2,v3,v4]==0,
	Message[Fourquarkd8type3::inderr];
	Abort[]
];



If[OptionValue[AutoNDR]===True,
	atr=TR5
	,
	atr=TR
];


(* B A^+ B *)
hv3=v3//ComplexConjugate;
hv4=v4//ComplexConjugate;
(* ComplexConjugate[sigma] will expand the DiracSigma to gamma matrices, recover it to DiracSigma *)
hv4=(hv4/.Dot->dot)/.f1_ dot[aa___,DiracGamma[LorentzIndex[lor1_,dim___],dim___],DiracGamma[LorentzIndex[lor2_,dim___],dim___],bb___]+f2_ dot[aa___,DiracGamma[LorentzIndex[lor2_,dim___],dim___],DiracGamma[LorentzIndex[lor1_,dim___],dim___],bb___]/;(f1+f2===0):>-2I f1 dot[aa,DiracSigma[DiracGamma[LorentzIndex[lor1,dim],dim],DiracGamma[LorentzIndex[lor2,dim],dim]],bb];
hv4=hv4/. {null->1,dot->Dot};

(*--------------------------------------------*)		

					
If[DirectoryQ[OptionValue[Parallelized]//ToString],
	fdir=OptionValue[Parallelized];
	pall="External"
,
	fdir="None";
	pall=OptionValue[Parallelized]
];


diagrams={xtype1,xtype2,xtype3,xtype4,xtype5,xtype6,xtype7,xtype8};


(*---------------------------------------------------*)
If[pall===True,

	DistributeDefinitions[qq,v1,v2,a1,b1,c1,d1,a2,b2,c2,d2];
	
	tmp=Plus@@WaitAll[ParallelSubmit[{hv3,hv4,holdf,atr},#[qq,{v1,v2,{a1,b1,c1,d1}},{hv3,hv4,{a2,b2,c2,d2}},holdf,atr]]&/@diagrams];
	QGather[(tmp/.{CA->SUNN,CF->(SUNN^2 - 1)/(2SUNN)})//Expand//SUNSimplify,qq,ShowasTable->False]/.CA-2CF->1/CA
	
,

	If[pall==="External",
	
		DistributeDefinitions[qq,v1,v2,a1,b1,c1,d1,a2,b2,c2,d2];
		
		If[fdir==="None",
		
			ParallelSubmit[{hv3,hv4,holdf,atr},#[qq,{v1,v2,{a1,b1,c1,d1}},{hv3,hv4,{a2,b2,c2,d2}},holdf,atr]]&/@diagrams
		,
		
			files=(StringSplit[ToString[#],"`"][[-1]])&/@diagrams;
			files=("Fourquarkd8type3_"<>#)&/@files;
			
			ImExport[fdir,
						files,
						{{hv3,hv4,holdf,atr},
						{qq,{v1,v2,{a1,b1,c1,d1}},{hv3,hv4,{a2,b2,c2,d2}},holdf,atr},
						diagrams}
						]
		]
		(* !!! do not touch tmp before WaitAll[tmp], any function may modifiy the things in EvaluationObject[...] should not be used here. !!! *)
	,
	
	
		tmp=Plus@@Map[#[qq,{v1,v2,{a1,b1,c1,d1}},{hv3,hv4,{a2,b2,c2,d2}},holdf,atr]&,diagrams];
		QGather[(tmp/.{CA->SUNN,CF->(SUNN^2 - 1)/(2SUNN)})//Expand//SUNSimplify,qq,ShowasTable->False]/.{CA-2CF->1/CA,2CA^3CF-CA^2(4CF^2+1)+1->0}
	]
]

]



(* ::Code::Initialization::Plain:: *)
(*--- The following are generated by algorithm ---*)


(* ::Input::Initialization:: *)
xtype1[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia1,cc,tr,str,dot,sunSimplify,contract,null},


 dia1=(Condensate[{c1, a2}]*Condensate[{a1, "G", c2}]*contract[tr[str[dot[hv3, v2, xprop[x]]]]*tr[str[dot[hv4, v1, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) + (Condensate[{a1, c2}]*Condensate[{b2, "G", d1}]*contract[tr[str[dot[hv3, xprop[-x], v2]]]*tr[str[dot[hv4, v1, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) + (Condensate[{d2, b1}]*Condensate[{c1, "G", a2}]*contract[tr[str[dot[hv3, v2, xprop[x]]]]*tr[str[dot[hv4, xprop[-x], v1]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{b2, d1}]*Condensate[{d2, "G", b1}]*contract[tr[str[dot[hv3, xprop[-x], v1, hv4, xprop[-x], v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{b2, d1}]*Condensate[{c1, "G", c2}]*contract[tr[str[dot[hv3, xprop[-x], v1, xprop[x], hv4, v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{a1, c2}]*Condensate[{d2, "G", d1}]*contract[tr[str[dot[hv4, v1, xprop[x], hv3, xprop[-x], v2]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D);


 dia1=dia1/.{FlavorDelta[fa_,fb_,___]:>FlavorDelta[fa,fb,HoldFlavor->holdf],dot[aa___,1,bb___]:>dot[aa,bb]}/.dot->Dot/.str->SUNTrace/.{tr->atr,contract->Contract}/.sunSimplify->SUNSimplify;


 dia1=FourierXP[dia1,{x,q}];


 dia1=QEvaluate[I ScaleMu^(1(4-D)) dia1,q,HoldFlavor->holdf,Parallelized->False]/.CA-2CF->1/CA/.{-1+CA^2-2CA CF->0,1-CA^2+2CA CF->0}/.CF->(CA^2-1)/(2CA)/.q->qq


]


(* ::Input::Initialization:: *)
xtype2[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia2,cc,tr,str,dot,sunSimplify,contract,null},


 dia2=(Condensate[{d2, b1}]*Condensate[{b2, "G", d1}]*contract[tr[str[dot[hv3, xprop[-x], v2]]]*tr[str[dot[hv4, xprop[-x], v1]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{b2, d1}]*Condensate[{a1, "G", a2}]*contract[tr[str[dot[hv3, v1, xprop[x], hv4, xprop[-x], v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{d2, b1}]*Condensate[{b2, "G", d1}]*contract[tr[str[dot[hv3, xprop[-x], v1, hv4, xprop[-x], v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{a1, c2}]*Condensate[{b2, "G", b1}]*contract[tr[str[dot[hv4, v1, hv3, xprop[-x], v2, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) - (Condensate[{a1, c2}]*Condensate[{c1, "G", a2}]*contract[tr[str[dot[hv4, v1, xprop[x], hv3, v2, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{a1, a2}]*Condensate[{c1, "G", c2}]*contract[tr[str[dot[hv3, v1, xprop[x]]]]*tr[str[dot[hv4, v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D);


 dia2=dia2/.{FlavorDelta[fa_,fb_,___]:>FlavorDelta[fa,fb,HoldFlavor->holdf],dot[aa___,1,bb___]:>dot[aa,bb]}/.dot->Dot/.str->SUNTrace/.{tr->atr,contract->Contract}/.sunSimplify->SUNSimplify;


 dia2=FourierXP[dia2,{x,q}];


 dia2=QEvaluate[I ScaleMu^(1(4-D)) dia2,q,HoldFlavor->holdf,Parallelized->False]/.CA-2CF->1/CA/.{-1+CA^2-2CA CF->0,1-CA^2+2CA CF->0}/.CF->(CA^2-1)/(2CA)/.q->qq


]


(* ::Input::Initialization:: *)
xtype3[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia3,cc,tr,str,dot,sunSimplify,contract,null},


 dia3=(Condensate[{d2, b1}]*Condensate[{a1, "G", c2}]*contract[tr[str[dot[hv4, v1]]]*tr[str[dot[hv3, xprop[-x], v2, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{d2, b1}]*Condensate[{c1, "G", c2}]*contract[tr[str[dot[hv3, xprop[-x], v1, hv4, v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{c1, c2}]*Condensate[{b2, "G", d1}]*contract[tr[str[dot[hv3, xprop[-x], v1, xprop[x], hv4, v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{d2, d1}]*Condensate[{a1, "G", c2}]*contract[tr[str[dot[hv4, v1, xprop[x], hv3, xprop[-x], v2]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) - (Condensate[{b2, b1}]*Condensate[{d2, "G", d1}]*contract[tr[str[dot[hv4, xprop[-x], v1, hv3, xprop[-x], v2]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{a1, a2}]*Condensate[{d2, "G", d1}]*contract[tr[str[dot[hv3, v1, xprop[x]]]]*tr[str[dot[hv4, xprop[-x], v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D);


 dia3=dia3/.{FlavorDelta[fa_,fb_,___]:>FlavorDelta[fa,fb,HoldFlavor->holdf],dot[aa___,1,bb___]:>dot[aa,bb]}/.dot->Dot/.str->SUNTrace/.{tr->atr,contract->Contract}/.sunSimplify->SUNSimplify;


 dia3=FourierXP[dia3,{x,q}];


 dia3=QEvaluate[I ScaleMu^(1(4-D)) dia3,q,HoldFlavor->holdf,Parallelized->False]/.CA-2CF->1/CA/.{-1+CA^2-2CA CF->0,1-CA^2+2CA CF->0}/.CF->(CA^2-1)/(2CA)/.q->qq


]


(* ::Input::Initialization:: *)
xtype4[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia4,cc,tr,str,dot,sunSimplify,contract,null},


 dia4=(Condensate[{a1, c2}]*Condensate[{c1, "G", a2}]*contract[tr[str[dot[hv3, v2, xprop[x]]]]*tr[str[dot[hv4, v1, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) + (Condensate[{c1, a2}]*Condensate[{b2, "G", d1}]*contract[tr[str[dot[hv3, v2]]]*tr[str[dot[hv4, xprop[-x], v1, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{c1, c2}]*Condensate[{a1, "G", a2}]*contract[tr[str[dot[hv3, v1, xprop[x], hv4, v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{c1, c2}]*Condensate[{d2, "G", b1}]*contract[tr[str[dot[hv3, xprop[-x], v1, hv4, v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{c1, a2}]*Condensate[{b2, "G", b1}]*contract[tr[str[dot[hv4, xprop[-x], v1, hv3, v2, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{d2, d1}]*Condensate[{a1, "G", a2}]*contract[tr[str[dot[hv3, v1, xprop[x]]]]*tr[str[dot[hv4, xprop[-x], v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D);


 dia4=dia4/.{FlavorDelta[fa_,fb_,___]:>FlavorDelta[fa,fb,HoldFlavor->holdf],dot[aa___,1,bb___]:>dot[aa,bb]}/.dot->Dot/.str->SUNTrace/.{tr->atr,contract->Contract}/.sunSimplify->SUNSimplify;


 dia4=FourierXP[dia4,{x,q}];


 dia4=QEvaluate[I ScaleMu^(1(4-D)) dia4,q,HoldFlavor->holdf,Parallelized->False]/.CA-2CF->1/CA/.{-1+CA^2-2CA CF->0,1-CA^2+2CA CF->0}/.CF->(CA^2-1)/(2CA)/.q->qq


]


(* ::Input::Initialization:: *)
xtype5[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia5,cc,tr,str,dot,sunSimplify,contract,null},


 dia5=(Condensate[{c1, a2}]*Condensate[{d2, "G", b1}]*contract[tr[str[dot[hv3, v2, xprop[x]]]]*tr[str[dot[hv4, xprop[-x], v1]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{d2, b1}]*Condensate[{a1, "G", a2}]*contract[tr[str[dot[hv3, v1, hv4, xprop[-x], v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{a1, a2}]*Condensate[{c1, "G", c2}]*contract[tr[str[dot[hv3, v1, xprop[x], hv4, v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{c1, a2}]*Condensate[{a1, "G", c2}]*contract[tr[str[dot[hv4, v1, xprop[x], hv3, v2, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) - (Condensate[{d2, d1}]*Condensate[{b2, "G", b1}]*contract[tr[str[dot[hv4, xprop[-x], v1, hv3, xprop[-x], v2]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{c1, c2}]*Condensate[{a1, "G", a2}]*contract[tr[str[dot[hv3, v1, xprop[x]]]]*tr[str[dot[hv4, v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D);


 dia5=dia5/.{FlavorDelta[fa_,fb_,___]:>FlavorDelta[fa,fb,HoldFlavor->holdf],dot[aa___,1,bb___]:>dot[aa,bb]}/.dot->Dot/.str->SUNTrace/.{tr->atr,contract->Contract}/.sunSimplify->SUNSimplify;


 dia5=FourierXP[dia5,{x,q}];


 dia5=QEvaluate[I ScaleMu^(1(4-D)) dia5,q,HoldFlavor->holdf,Parallelized->False]/.CA-2CF->1/CA/.{-1+CA^2-2CA CF->0,1-CA^2+2CA CF->0}/.CF->(CA^2-1)/(2CA)/.q->qq


]


(* ::Input::Initialization:: *)
xtype6[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia6,cc,tr,str,dot,sunSimplify,contract,null},


 dia6=(Condensate[{b2, d1}]*Condensate[{d2, "G", b1}]*contract[tr[str[dot[hv3, xprop[-x], v2]]]*tr[str[dot[hv4, xprop[-x], v1]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{b2, b1}]*Condensate[{c1, "G", a2}]*contract[tr[str[dot[hv4, xprop[-x], v1, hv3, v2, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) - (Condensate[{c1, a2}]*Condensate[{d2, "G", d1}]*contract[tr[str[dot[hv4, xprop[-x], v1, xprop[x], hv3, v2]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{b2, b1}]*Condensate[{d2, "G", d1}]*contract[tr[str[dot[hv3, xprop[-x], v1]]]*tr[str[dot[hv4, xprop[-x], v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{b2, b1}]*Condensate[{a1, "G", a2}]*contract[tr[str[dot[hv3, v1]]]*tr[str[dot[hv4, xprop[-x], v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{a1, a2}]*Condensate[{b2, "G", b1}]*contract[tr[str[dot[hv3, v1]]]*tr[str[dot[hv4, xprop[-x], v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D);


 dia6=dia6/.{FlavorDelta[fa_,fb_,___]:>FlavorDelta[fa,fb,HoldFlavor->holdf],dot[aa___,1,bb___]:>dot[aa,bb]}/.dot->Dot/.str->SUNTrace/.{tr->atr,contract->Contract}/.sunSimplify->SUNSimplify;


 dia6=FourierXP[dia6,{x,q}];


 dia6=QEvaluate[I ScaleMu^(1(4-D)) dia6,q,HoldFlavor->holdf,Parallelized->False]/.CA-2CF->1/CA/.{-1+CA^2-2CA CF->0,1-CA^2+2CA CF->0}/.CF->(CA^2-1)/(2CA)/.q->qq


]


(* ::Input::Initialization:: *)
xtype7[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia7,cc,tr,str,dot,sunSimplify,contract,null},


 dia7=(Condensate[{b2, d1}]*Condensate[{c1, "G", a2}]*contract[tr[str[dot[hv3, v2]]]*tr[str[dot[hv4, xprop[-x], v1, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{b2, b1}]*Condensate[{a1, "G", c2}]*contract[tr[str[dot[hv4, v1, hv3, xprop[-x], v2, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{c1, c2}]*Condensate[{b2, "G", b1}]*contract[tr[str[dot[hv3, xprop[-x], v1]]]*tr[str[dot[hv4, v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{b2, b1}]*Condensate[{c1, "G", c2}]*contract[tr[str[dot[hv3, xprop[-x], v1]]]*tr[str[dot[hv4, v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{d2, d1}]*Condensate[{c1, "G", c2}]*contract[tr[str[dot[hv4, v2]]]*tr[str[dot[hv3, xprop[-x], v1, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{c1, c2}]*Condensate[{d2, "G", d1}]*contract[tr[str[dot[hv4, v2]]]*tr[str[dot[hv3, xprop[-x], v1, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D);


 dia7=dia7/.{FlavorDelta[fa_,fb_,___]:>FlavorDelta[fa,fb,HoldFlavor->holdf],dot[aa___,1,bb___]:>dot[aa,bb]}/.dot->Dot/.str->SUNTrace/.{tr->atr,contract->Contract}/.sunSimplify->SUNSimplify;


 dia7=FourierXP[dia7,{x,q}];


 dia7=QEvaluate[I ScaleMu^(1(4-D)) dia7,q,HoldFlavor->holdf,Parallelized->False]/.CA-2CF->1/CA/.{-1+CA^2-2CA CF->0,1-CA^2+2CA CF->0}/.CF->(CA^2-1)/(2CA)/.q->qq


]


(* ::Input::Initialization:: *)
xtype8[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia8,cc,tr,str,dot,sunSimplify,contract,null},


 dia8=(Condensate[{b2, d1}]*Condensate[{a1, "G", c2}]*contract[tr[str[dot[hv3, xprop[-x], v2]]]*tr[str[dot[hv4, v1, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) + (Condensate[{a1, c2}]*Condensate[{d2, "G", b1}]*contract[tr[str[dot[hv4, v1]]]*tr[str[dot[hv3, xprop[-x], v2, xprop[x]]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, d2]*FlavorDelta[c2, a1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{a1, a2}]*Condensate[{d2, "G", b1}]*contract[tr[str[dot[hv3, v1, hv4, xprop[-x], v2, xprop[x]]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{a1, a2}]*Condensate[{b2, "G", d1}]*contract[tr[str[dot[hv3, v1, xprop[x], hv4, xprop[-x], v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, d2]*FlavorDelta[c2, c1]*FlavorDelta[d1, b2]*SPD[x])/(64*CA^2*D) - (Condensate[{d2, d1}]*Condensate[{c1, "G", a2}]*contract[tr[str[dot[hv4, xprop[-x], v1, xprop[x], hv3, v2]]]]*FlavorDelta[a2, c1]*FlavorDelta[b1, b2]*FlavorDelta[c2, a1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D) + (Condensate[{d2, d1}]*Condensate[{b2, "G", b1}]*contract[tr[str[dot[hv3, xprop[-x], v1]]]*tr[str[dot[hv4, xprop[-x], v2]]]]*FlavorDelta[a2, a1]*FlavorDelta[b1, b2]*FlavorDelta[c2, c1]*FlavorDelta[d1, d2]*SPD[x])/(64*CA^2*D);


 dia8=dia8/.{FlavorDelta[fa_,fb_,___]:>FlavorDelta[fa,fb,HoldFlavor->holdf],dot[aa___,1,bb___]:>dot[aa,bb]}/.dot->Dot/.str->SUNTrace/.{tr->atr,contract->Contract}/.sunSimplify->SUNSimplify;


 dia8=FourierXP[dia8,{x,q}];


 dia8=QEvaluate[I ScaleMu^(1(4-D)) dia8,q,HoldFlavor->holdf,Parallelized->False]/.CA-2CF->1/CA/.{-1+CA^2-2CA CF->0,1-CA^2+2CA CF->0}/.CF->(CA^2-1)/(2CA)/.q->qq


]


(* ::Input::Initialization:: *)
(*type1[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia1,coa,lora,lorb},


dia1=atr[SUNTrace[hv3 . v2 . xprop[x]]] atr[SUNTrace[hv4 . xprop[-x] . v1]] cqgq3[b1, d2] cqq[a2, c1] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] + atr[SUNTrace[hv3 . xprop[-x] . v2]] atr[SUNTrace[hv4 . xprop[-x] . v1]] cqgq3[d1, b2] cqq[b1, d2] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . v1 . xprop[x] . hv4 . v2 . xprop[x]]] cqgq3[a2, a1] cqq[c2, c1] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . xprop[-x] . v1 . hv4 . v2 . xprop[x]]] cqgq3[b1, d2] cqq[c2, c1] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . xprop[-x] . v1 . xprop[x] . hv4 . v2]] cqgq3[d1, b2] cqq[c2, c1] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv4 . v1 . xprop[x] . hv3 . v2 . xprop[x]]] cqgq3[c2, a1] cqq[a2, c1] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] - atr[SUNTrace[hv4 . v1 . hv3 . xprop[-x] . v2 . xprop[x]]] cqgq3[c2, a1] cqq[b1, b2] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv4 . v2]] atr[SUNTrace[hv3 . xprop[-x] . v1 . xprop[x]]] cqgq3[c2, c1] cqq[d1, d2] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x];


dia1=FourierXP[dia1,{x,q}]/.{SUNN->CA};

dia1=QEvaluate[I ScaleMu^(4-D) dia1,q,HoldFlavor->holdf,Parallelized->False]/.q->qq
]*)


(* ::Input::Initialization:: *)
(*type2[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia2,coa,lora,lorb},


dia2=atr[SUNTrace[hv4 . v1]] atr[SUNTrace[hv3 . xprop[-x] . v2 . xprop[x]]] cqgq3[b1, d2] cqq[c2, a1] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] + atr[SUNTrace[hv3 . xprop[-x] . v2]] atr[SUNTrace[hv4 . v1 . xprop[x]]] cqgq3[c2, a1] cqq[d1, b2] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . xprop[-x] . v1 . xprop[x] . hv4 . v2]] cqgq3[c2, c1] cqq[d1, b2] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv4 . xprop[-x] . v1 . xprop[x] . hv3 . v2]] cqgq3[a2, c1] cqq[d1, d2] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] - atr[SUNTrace[hv4 . v1 . xprop[x] . hv3 . xprop[-x] . v2]] cqgq3[c2, a1] cqq[d1, d2] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . v1 . xprop[x]]] atr[SUNTrace[hv4 . v2 . xprop[x]]] cqgq3[c2, c1] cqq[a2, a1] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . v1 . xprop[x]]] atr[SUNTrace[hv4 . xprop[-x] . v2]] cqgq3[a2, a1] cqq[d1, d2] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . xprop[-x] . v1]] atr[SUNTrace[hv4 . xprop[-x] . v2]] cqgq3[b1, b2] cqq[d1, d2] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x];


dia2=FourierXP[dia2,{x,q}]/.{SUNN->CA};

dia2=QEvaluate[I ScaleMu^(4-D) dia2,q,HoldFlavor->holdf,Parallelized->False]/.q->qq
]*)


(* ::Input::Initialization:: *)
(*type3[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia3,coa,lora,lorb},


dia3=-(atr[SUNTrace[hv3 . v1 . hv4 . xprop[-x] . v2 . xprop[x]]] cqgq3[b1, d2] cqq[a2, a1] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x]) - atr[SUNTrace[hv3 . xprop[-x] . v1 . hv4 . v2 . xprop[x]]] cqgq3[c2, c1] cqq[b1, d2] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . xprop[-x] . v1 . hv4 . xprop[-x] . v2]] cqgq3[d1, b2] cqq[b1, d2] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . v1 . xprop[x] . hv4 . xprop[-x] . v2]] cqgq3[a2, a1] cqq[d1, b2] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . xprop[-x] . v1 . hv4 . xprop[-x] . v2]] cqgq3[b1, d2] cqq[d1, b2] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv4 . xprop[-x] . v1 . xprop[x] . hv3 . v2]] cqgq3[d1, d2] cqq[a2, c1] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] - atr[SUNTrace[hv4 . xprop[-x] . v1 . hv3 . xprop[-x] . v2]] cqgq3[d1, d2] cqq[b1, b2] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . xprop[-x] . v1]] atr[SUNTrace[hv4 . v2 . xprop[x]]] cqgq3[c2, c1] cqq[b1, b2] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x];


dia3=FourierXP[dia3,{x,q}]/.{SUNN->CA};

dia3=QEvaluate[I ScaleMu^(4-D) dia3,q,HoldFlavor->holdf,Parallelized->False]/.q->qq
]*)


(* ::Input::Initialization:: *)
(*type4[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia4,coa,lora,lorb},


dia4=atr[SUNTrace[hv3 . v2 . xprop[x]]] atr[SUNTrace[hv4 . xprop[-x] . v1]] cqgq3[a2, c1] cqq[b1, d2] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] + atr[SUNTrace[hv3 . xprop[-x] . v2]] atr[SUNTrace[hv4 . xprop[-x] . v1]] cqgq3[b1, d2] cqq[d1, b2] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . v1 . xprop[x] . hv4 . v2 . xprop[x]]] cqgq3[c2, c1] cqq[a2, a1] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . v1 . xprop[x] . hv4 . xprop[-x] . v2]] cqgq3[d1, b2] cqq[a2, a1] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv4 . xprop[-x] . v1 . hv3 . v2 . xprop[x]]] cqgq3[a2, c1] cqq[b1, b2] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . v1]] atr[SUNTrace[hv4 . xprop[-x] . v2 . xprop[x]]] cqgq3[b1, b2] cqq[a2, a1] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . v1 . xprop[x]]] atr[SUNTrace[hv4 . v2 . xprop[x]]] cqgq3[a2, a1] cqq[c2, c1] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . xprop[-x] . v1]] atr[SUNTrace[hv4 . v2 . xprop[x]]] cqgq3[b1, b2] cqq[c2, c1] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x];


dia4=FourierXP[dia4,{x,q}]/.{SUNN->CA};

dia4=QEvaluate[I ScaleMu^(4-D) dia4,q,HoldFlavor->holdf,Parallelized->False]/.q->qq
]*)


(* ::Input::Initialization:: *)
(*type5[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia5,coa,lora,lorb},


dia5=atr[SUNTrace[hv3 . v2]] atr[SUNTrace[hv4 . xprop[-x] . v1 . xprop[x]]] cqgq3[d1, b2] cqq[a2, c1] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] + atr[SUNTrace[hv4 . v1]] atr[SUNTrace[hv3 . xprop[-x] . v2 . xprop[x]]] cqgq3[c2, a1] cqq[b1, d2] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv4 . xprop[-x] . v1 . hv3 . v2 . xprop[x]]] cqgq3[b1, b2] cqq[a2, c1] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] - atr[SUNTrace[hv4 . v1 . xprop[x] . hv3 . xprop[-x] . v2]] cqgq3[d1, d2] cqq[c2, a1] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] - atr[SUNTrace[hv4 . xprop[-x] . v1 . hv3 . xprop[-x] . v2]] cqgq3[b1, b2] cqq[d1, d2] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . v1]] atr[SUNTrace[hv4 . xprop[-x] . v2 . xprop[x]]] cqgq3[a2, a1] cqq[b1, b2] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . xprop[-x] . v1]] atr[SUNTrace[hv4 . xprop[-x] . v2]] cqgq3[d1, d2] cqq[b1, b2] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv4 . v2]] atr[SUNTrace[hv3 . xprop[-x] . v1 . xprop[x]]] cqgq3[d1, d2] cqq[c2, c1] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x];


dia5=FourierXP[dia5,{x,q}]/.{SUNN->CA};

dia5=QEvaluate[I ScaleMu^(4-D) dia5,q,HoldFlavor->holdf,Parallelized->False]/.q->qq
]*)


(* ::Input::Initialization:: *)
(*type6[qq_,{v1_,v2_,{a1_,b1_,c1_,d1_}},{hv3_,hv4_,{a2_,b2_,c2_,d2_}},holdf_,atr_]:=Block[{x,q,dia6,coa,lora,lorb},


dia6=atr[SUNTrace[hv3 . v2 . xprop[x]]] atr[SUNTrace[hv4 . v1 . xprop[x]]] cqgq3[c2, a1] cqq[a2, c1] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] + atr[SUNTrace[hv3 . v2 . xprop[x]]] atr[SUNTrace[hv4 . v1 . xprop[x]]] cqgq3[a2, c1] cqq[c2, a1] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] + atr[SUNTrace[hv3 . xprop[-x] . v2]] atr[SUNTrace[hv4 . v1 . xprop[x]]] cqgq3[d1, b2] cqq[c2, a1] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] + atr[SUNTrace[hv3 . v2]] atr[SUNTrace[hv4 . xprop[-x] . v1 . xprop[x]]] cqgq3[a2, c1] cqq[d1, b2] FlavorDelta[a2, c1] FlavorDelta[b1, d2] FlavorDelta[c2, a1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv3 . v1 . hv4 . xprop[-x] . v2 . xprop[x]]] cqgq3[a2, a1] cqq[b1, d2] FlavorDelta[a2, a1] FlavorDelta[b1, d2] FlavorDelta[c2, c1] FlavorDelta[d1, b2] SPD[x] - atr[SUNTrace[hv4 . v1 . xprop[x] . hv3 . v2 . xprop[x]]] cqgq3[a2, c1] cqq[c2, a1] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] - atr[SUNTrace[hv4 . v1 . hv3 . xprop[-x] . v2 . xprop[x]]] cqgq3[b1, b2] cqq[c2, a1] FlavorDelta[a2, c1] FlavorDelta[b1, b2] FlavorDelta[c2, a1] FlavorDelta[d1, d2] SPD[x] + atr[SUNTrace[hv3 . v1 . xprop[x]]] atr[SUNTrace[hv4 . xprop[-x] . v2]] cqgq3[d1, d2] cqq[a2, a1] FlavorDelta[a2, a1] FlavorDelta[b1, b2] FlavorDelta[c2, c1] FlavorDelta[d1, d2] SPD[x];


dia6=FourierXP[dia6,{x,q}]/.{SUNN->CA};

dia6=QEvaluate[I ScaleMu^(4-D) dia6,q,HoldFlavor->holdf,Parallelized->False]/.q->qq
]*)


(* ::Code::Initialization::Plain:: *)
End[]
(*EndPackage[]*)
